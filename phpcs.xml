<?xml version="1.0" encoding="UTF-8"?>
<ruleset name="drupal_core">
  <description>Default PHP CodeSniffer configuration for Drupal core.</description>
  <file>web/modules/custom</file>
  <file>web/themes/custom</file>
  <arg name="extensions" value="inc,install,module,php,profile,test,theme"/>

  <!-- Only include specific sniffs that pass. This ensures that, if new sniffs are added, HEAD does not fail.-->
  <!-- Drupal sniffs -->
  <rule ref="Drupal.Array.DisallowLongArraySyntax"/>
  <rule ref="Drupal.Classes.ClassCreateInstance"/>
  <rule ref="Drupal.Classes.ClassDeclaration"/>
  <rule ref="Drupal.Classes.FullyQualifiedNamespace"/>
  <rule ref="Drupal.Classes.InterfaceName"/>
  <rule ref="Drupal.Classes.UnusedUseStatement"/>
  <rule ref="Drupal.Classes.UseLeadingBackslash"/>
  <rule ref="Drupal.CSS.ClassDefinitionNameSpacing"/>
  <rule ref="Drupal.CSS.ColourDefinition"/>
  <rule ref="Drupal.Commenting.ClassComment">
    <exclude name="Drupal.Commenting.ClassComment.Missing"/>
  </rule>
  <rule ref="Drupal.Commenting.DocComment">
    <!-- Sniff for these errors: SpacingAfterTagGroup, WrongEnd, SpacingBetween,
      ContentAfterOpen, SpacingBeforeShort, TagValueIndent, ShortStartSpace,
      SpacingAfter -->
    <exclude name="Drupal.Commenting.DocComment.LongNotCapital"/>
    <!-- ParamNotFirst still not decided for PHPUnit-based tests.
      @see https://www.drupal.org/node/2253915 -->
    <exclude name="Drupal.Commenting.DocComment.ParamNotFirst"/>
    <exclude name="Drupal.Commenting.DocComment.SpacingBeforeTags"/>
    <exclude name="Drupal.Commenting.DocComment.LongFullStop"/>
    <exclude name="Drupal.Commenting.DocComment.ShortNotCapital"/>
    <exclude name="Drupal.Commenting.DocComment.ShortFullStop"/>
    <!-- TagsNotGrouped and ParamGroup have false-positives.
      @see https://www.drupal.org/node/2060925 -->
    <exclude name="Drupal.Commenting.DocComment.TagsNotGrouped"/>
    <exclude name="Drupal.Commenting.DocComment.ParamGroup"/>
    <exclude name="Drupal.Commenting.DocComment.ShortSingleLine"/>
    <exclude name="Drupal.Commenting.DocComment.TagGroupSpacing"/>
    <exclude name="Drupal.Commenting.DocComment.MissingShort"/>
  </rule>
  <rule ref="Drupal.Commenting.DocCommentStar"/>
  <rule ref="Drupal.Commenting.FileComment"/>
  <rule ref="Drupal.Commenting.FunctionComment">
    <exclude name="Drupal.Commenting.FunctionComment.IncorrectTypeHint"/>
    <exclude name="Drupal.Commenting.FunctionComment.InvalidNoReturn"/>
    <exclude name="Drupal.Commenting.FunctionComment.InvalidTypeHint"/>
    <exclude name="Drupal.Commenting.FunctionComment.Missing"/>
    <exclude name="Drupal.Commenting.FunctionComment.MissingParamComment"/>
    <exclude name="Drupal.Commenting.FunctionComment.MissingParamType"/>
    <exclude name="Drupal.Commenting.FunctionComment.MissingReturnComment"/>
    <exclude name="Drupal.Commenting.FunctionComment.MissingReturnType"/>
    <exclude name="Drupal.Commenting.FunctionComment.ParamCommentFullStop"/>
    <exclude name="Drupal.Commenting.FunctionComment.ParamMissingDefinition"/>
    <exclude name="Drupal.Commenting.FunctionComment.TypeHintMissing"/>
  </rule>
  <rule ref="Drupal.Commenting.InlineComment">
    <!-- Sniff for: NoSpaceBefore -->
    <exclude name="Drupal.Commenting.InlineComment.DocBlock"/>
    <exclude name="Drupal.Commenting.InlineComment.InvalidEndChar"/>
    <exclude name="Drupal.Commenting.InlineComment.NotCapital"/>
    <exclude name="Drupal.Commenting.InlineComment.SpacingAfter"/>
    <exclude name="Drupal.Commenting.InlineComment.SpacingBefore"/>
    <exclude name="Drupal.Commenting.InlineComment.WrongStyle"/>
  </rule>
  <rule ref="Drupal.ControlStructures.ElseIf"/>
  <rule ref="Drupal.ControlStructures.ControlSignature"/>
  <rule ref="Drupal.Files.EndFileNewline"/>
  <rule ref="Drupal.Files.FileEncoding"/>
  <rule ref="Drupal.Files.TxtFileLineLength"/>
  <rule ref="Drupal.Formatting.MultiLineAssignment"/>
  <rule ref="Drupal.Formatting.SpaceInlineIf"/>
  <rule ref="Drupal.Formatting.SpaceUnaryOperator"/>
  <rule ref="Drupal.Functions.DiscouragedFunctions"/>
  <rule ref="Drupal.Functions.FunctionDeclaration"/>
  <rule ref="Drupal.InfoFiles.AutoAddedKeys"/>
  <rule ref="Drupal.InfoFiles.ClassFiles"/>
  <rule ref="Drupal.InfoFiles.DuplicateEntry"/>
  <rule ref="Drupal.InfoFiles.Required"/>
  <rule ref="Drupal.Methods.MethodDeclaration">
    <!-- Silence method name underscore warning which is covered already in
      Drupal.NamingConventions.ValidFunctionName.ScopeNotCamelCaps. -->
    <exclude name="Drupal.Methods.MethodDeclaration.Underscore"/>
  </rule>
  <rule ref="Drupal.NamingConventions.ValidVariableName">
    <!-- Sniff for: LowerStart -->
    <exclude name="Drupal.NamingConventions.ValidVariableName.LowerCamelName"/>
  </rule>
  <rule ref="Drupal.Scope.MethodScope"/>
  <rule ref="Drupal.Semantics.EmptyInstall"/>
  <rule ref="Drupal.Semantics.FunctionAlias"/>
  <rule ref="Drupal.Semantics.FunctionT">
    <exclude name="Drupal.Semantics.FunctionT.NotLiteralString"/>
    <exclude name="Drupal.Semantics.FunctionT.ConcatString"/>
  </rule>
  <rule ref="Drupal.Semantics.FunctionWatchdog"/>
  <rule ref="Drupal.Semantics.InstallHooks"/>
  <rule ref="Drupal.Semantics.LStringTranslatable"/>
  <rule ref="Drupal.Semantics.PregSecurity"/>
  <rule ref="Drupal.Semantics.TInHookMenu"/>
  <rule ref="Drupal.Semantics.TInHookSchema"/>
  <rule ref="Drupal.WhiteSpace.Comma"/>
  <rule ref="Drupal.WhiteSpace.EmptyLines"/>
  <rule ref="Drupal.WhiteSpace.Namespace"/>
  <rule ref="Drupal.WhiteSpace.ObjectOperatorIndent"/>
  <rule ref="Drupal.WhiteSpace.ObjectOperatorSpacing"/>
  <rule ref="Drupal.WhiteSpace.OpenBracketSpacing"/>
  <rule ref="Drupal.WhiteSpace.OpenTagNewline"/>
  <rule ref="Drupal.WhiteSpace.OperatorSpacing"/>
  <rule ref="Drupal.WhiteSpace.ScopeIndent"/>

  <!-- Drupal Practice sniffs -->
  <rule ref="DrupalPractice/Sniffs/Commenting/ExpectedExceptionSniff.php"/>

  <!-- Generic sniffs -->
  <rule ref="Generic.Files.ByteOrderMark"/>
  <rule ref="Generic.Files.LineEndings"/>
  <rule ref="Generic.Formatting.SpaceAfterCast"/>
  <rule ref="Generic.Functions.FunctionCallArgumentSpacing"/>
  <rule ref="Generic.NamingConventions.ConstructorName"/>
  <rule ref="Generic.NamingConventions.UpperCaseConstantName"/>
  <rule ref="Generic.PHP.DeprecatedFunctions"/>
  <rule ref="Generic.PHP.DisallowShortOpenTag"/>
  <rule ref="Generic.PHP.LowerCaseKeyword" />
  <rule ref="Generic.PHP.UpperCaseConstant"/>
  <rule ref="Generic.WhiteSpace.DisallowTabIndent"/>

  <!-- MySource sniffs -->
  <rule ref="MySource.Debug.DebugCode"/>

  <!-- PEAR sniffs -->
  <rule ref="PEAR.Files.IncludingFile"/>
  <!-- Disable some error messages that we do not want. -->
  <rule ref="PEAR.Files.IncludingFile.UseIncludeOnce">
    <severity>0</severity>
  </rule>
  <rule ref="PEAR.Files.IncludingFile.UseInclude">
    <severity>0</severity>
  </rule>
  <rule ref="PEAR.Files.IncludingFile.UseRequireOnce">
    <severity>0</severity>
  </rule>
  <rule ref="PEAR.Files.IncludingFile.UseRequire">
    <severity>0</severity>
  </rule>
  <rule ref="PEAR.Functions.ValidDefaultValue"/>

  <!-- PSR-2 sniffs -->
  <rule ref="PSR2.Classes.PropertyDeclaration">
    <exclude name="PSR2.Classes.PropertyDeclaration.Underscore"/>
  </rule>

  <!-- Squiz sniffs -->
  <rule ref="Squiz.Arrays.ArrayBracketSpacing"/>
  <rule ref="Squiz.Arrays.ArrayDeclaration">
    <exclude name="Squiz.Arrays.ArrayDeclaration.NoKeySpecified"/>
    <exclude name="Squiz.Arrays.ArrayDeclaration.KeySpecified"/>
  </rule>
  <!-- Disable some error messages that we do not want. -->
  <rule ref="Squiz.Arrays.ArrayDeclaration.CloseBraceNotAligned">
    <severity>0</severity>
  </rule>
  <rule ref="Squiz.Arrays.ArrayDeclaration.DoubleArrowNotAligned">
    <severity>0</severity>
  </rule>
  <rule ref="Squiz.Arrays.ArrayDeclaration.FirstValueNoNewline">
    <severity>0</severity>
  </rule>
  <rule ref="Squiz.Arrays.ArrayDeclaration.KeyNotAligned">
    <severity>0</severity>
  </rule>
  <rule ref="Squiz.Arrays.ArrayDeclaration.MultiLineNotAllowed">
    <severity>0</severity>
  </rule>
  <rule ref="Squiz.Arrays.ArrayDeclaration.NoComma">
    <severity>0</severity>
  </rule>
  <rule ref="Squiz.Arrays.ArrayDeclaration.NoCommaAfterLast">
    <severity>0</severity>
  </rule>
  <rule ref="Squiz.Arrays.ArrayDeclaration.NotLowerCase">
    <severity>0</severity>
  </rule>
  <rule ref="Squiz.Arrays.ArrayDeclaration.SingleLineNotAllowed">
    <severity>0</severity>
  </rule>
  <rule ref="Squiz.Arrays.ArrayDeclaration.ValueNotAligned">
    <severity>0</severity>
  </rule>
  <rule ref="Squiz.Arrays.ArrayDeclaration.ValueNoNewline">
    <severity>0</severity>
  </rule>
  <rule ref="Squiz.ControlStructures.ForEachLoopDeclaration" />
  <!-- Disable some error messages that we already cover. -->
  <rule ref="Squiz.ControlStructures.ForEachLoopDeclaration.AsNotLower">
    <severity>0</severity>
  </rule>
  <rule ref="Squiz.ControlStructures.ForEachLoopDeclaration.SpaceAfterOpen">
    <severity>0</severity>
  </rule>
  <rule ref="Squiz.ControlStructures.ForEachLoopDeclaration.SpaceBeforeClose">
    <severity>0</severity>
  </rule>
  <rule ref="Squiz.ControlStructures.ForLoopDeclaration"/>
  <!-- Disable some error messages that we already cover. -->
  <rule ref="Squiz.ControlStructures.ForLoopDeclaration.SpacingAfterOpen">
    <severity>0</severity>
  </rule>
  <rule ref="Squiz.ControlStructures.ForLoopDeclaration.SpacingBeforeClose">
    <severity>0</severity>
  </rule>
  <rule ref="Squiz.PHP.LowercasePHPFunctions"/>
  <rule ref="Squiz.Strings.ConcatenationSpacing">
    <properties>
      <property name="spacing" value="1"/>
      <property name="ignoreNewlines" value="true"/>
    </properties>
  </rule>

  <!-- Zend sniffs -->
  <rule ref="Zend.Files.ClosingTag"/>

</ruleset>
